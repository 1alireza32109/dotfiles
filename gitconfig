[color]
  # colorの設定(以下のコマンドは自動で色つける)
  status      = auto
  diff        = auto
  branch      = auto
  interactive = auto
  grep        = auto
[push]
  default = tracking       # defaultのpush先はtrackingしているリポジトリ
[core]
  excludesfile = /Users/minamihikotake/.gitignore_global
  # autocrlf     = input             # CRLFを自動変換
  pager        = lv -c             # lvでページャの設定
[alias]
  config-list = config --global --list # コンフィグの設定確認用
  st = status -uno
  sta = status
  sh = show
  so = remote show origin
  ft = fetch
  up = pull --rebase       # pull rebase
  rbm = rebase master      # masterへのrebaseはよく使うのでalias
  ad = add
  ap = add -p
  ci = commit -a           # modifiedなファイルを全てstageへ
  cam = commit -a --amend  # 直前のcommitを修正
  co = checkout
  ss = stash
  # reset関連
  r1 = reset HEAD~1
  r2 = reset HEAD~2
  r3 = reset HEAD~3
  r4 = reset HEAD~4
  r5 = reset HEAD~5
  rh = reset --hard HEAD
  # branch関連
  br = branch
  ba = branch -a           # originも含めた全てのbranchを表示
  bm = branch --merged     # merge済みのbranchを表示
  bn = branch --no-merged  # mergeしてないbranchを表示
  # log関連
  wc = whatchanged         # logに変更されたファイルも一緒に出す
  ls = log --stat          # logに変更されたファイルも一緒に出す
  lp = log -p              # diffも一緒に出す
  la = log --pretty=\"format:%ad %h (%an): %s\" --date=short  # ざっくりログ出す
  lr = log origin          # originのlog
  oneline = log --pretty=oneline
  ranking = shortlog -s -n --no-merges
  # logをtree表示
  log-graph = log --graph --date=short --pretty=format:'%Cgreen%h %cd %Cblue%cn %Creset%s'
  log-all = log --graph --all --color --pretty='%x09%h %cn%x09%s %Cred%d%Creset'
  # diff関連
  dm = diff master           # masterとのdiff
  dw = diff --color-words    # 単語単位でいろつけてdiff
  dc = diff --cached         # addされているものとのdiff
  ds = diff --staged         # 同上(1.6.1移行)
  d1 = diff HEAD~            # HEADから1つ前とdiff
  d2 = diff HEAD~~           # HEADから2つ前とdiff
  d3 = diff HEAD~~~          # HEADから3つ前とdiff
  d4 = diff HEAD~~~~         # HEADから4つ前とdiff
  d5 = diff HEAD~~~~~        # HEADから5つ前とdiff
  d10 = diff HEAD~~~~~~~~~~  # HEADから10前とdiff
  # mergeの際にconflictが起きたファイルを編集
  edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
  # mergeの際にconflictが起きたファイルをadd
  add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
  # grep関連
  gr = grep
  gn = grep -n
  # submodule
  sm = submodule
  sma = submodule add
  smi = submodule update --init
  smu = submodule update
  smst = submodule foreach "git status"
  smum = submodule foreach "git checkout master; git pull origin master"
  # git flow
  fi = flow init -d
  ff = flow feature
  fr = flow release
  fh = flow hotfix
